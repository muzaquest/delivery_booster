#!/usr/bin/env python3
"""–°–Ω–∞–ø—à–æ—Ç-—Ç–µ—Å—Ç—ã –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ 8"""

import re
import sys
import os

def test_section8():
    print("üß™ –¢–ï–°–¢ –†–ê–ó–î–ï–õ–ê 8")
    print("=" * 50)
    
    try:
        from app.report_text import generate_full_report
        
        # –¢–µ—Å—Ç 1: Ika Canggu Q2 2025
        print("1. –¢–µ—Å—Ç–∏—Ä—É—é Ika Canggu Q2 2025...")
        report1 = generate_full_report("2025-04-01_2025-06-30", 11)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–∞–∑–¥–µ–ª–∞ 8
        if "üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –î–ù–ò" in report1:
            print("‚úÖ –†–∞–∑–¥–µ–ª 8 –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏
            blocks = ["–ö–õ–Æ–ß–ï–í–´–ï –¶–ò–§–†–´", "–†–ï–ê–õ–¨–ù–´–ï –ü–†–ò–ß–ò–ù–´", "–í–ù–ï–®–ù–ò–ï –§–ê–ö–¢–û–†–´", "–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò"]
            found_blocks = sum(1 for block in blocks if block in report1)
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –±–ª–æ–∫–æ–≤: {found_blocks}/{len(blocks)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ "–ø–æ–ª–æ—Ç–Ω–∞"
            section8_match = re.search(r'8\. üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –î–ù–ò.*?(?=9\.|$)', report1, re.DOTALL)
            if section8_match:
                section8_text = section8_match.group(0)
                long_lines = len([line for line in section8_text.split('\\n') if len(line) > 200])
                print(f"‚úÖ –î–ª–∏–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫: {long_lines} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å <5)")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
                if "IDR" in section8_text and "–ø–æ—Ç–µ—Ä–∏" in section8_text:
                    print("‚úÖ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
                else:
                    print("‚ùå –ù–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ä–∞–∑–¥–µ–ª 8")
        else:
            print("‚ùå –†–∞–∑–¥–µ–ª 8 –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        
        print()
        
        # –¢–µ—Å—Ç 2: Only Eggs –º–∞–π 2025
        print("2. –¢–µ—Å—Ç–∏—Ä—É—é Only Eggs –º–∞–π 2025...")
        report2 = generate_full_report("2025-05-01_2025-05-31", 20)
        
        if "üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –î–ù–ò" in report2:
            print("‚úÖ –†–∞–∑–¥–µ–ª 8 –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
            if "üìä –ù–∞–π–¥–µ–Ω–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–Ω–µ–π" in report2:
                print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–Ω–µ–π")
            if "üí∏ –û–±—â–∏–µ –ø–æ—Ç–µ—Ä–∏" in report2:
                print("‚úÖ –û–±—â–∏–µ –ø–æ—Ç–µ—Ä–∏ —É–∫–∞–∑–∞–Ω—ã")
            if "üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò" in report2 or "–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò" in report2:
                print("‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        else:
            print("‚ùå –†–∞–∑–¥–µ–ª 8 –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        
        print()
        print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
        
        # –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã
        basic_checks = [
            "üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –î–ù–ò" in report1,
            "üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –î–ù–ò" in report2,
            len(report1) > 3000,
            len(report2) > 3000
        ]
        
        passed = sum(basic_checks)
        print(f"‚úÖ –ë–∞–∑–æ–≤—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: {passed}/{len(basic_checks)}")
        
        if passed == len(basic_checks):
            print("üéâ –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
            print("‚úÖ –†–∞–∑–¥–µ–ª 8 —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç–∞–±–∏–ª—å–Ω–∞")
            print("‚úÖ –ì–æ—Ç–æ–≤ –∫ production")
        else:
            print("‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´")
            print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞")
        
        return passed == len(basic_checks)
        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        return False

if __name__ == "__main__":
    success = test_section8()
    sys.exit(0 if success else 1)